> Or, And and Not tex visual translation
> logic operations fall back to Python logic ops?


> remove \lim, \sum and definite \int vars from free_vars

> lambda parse set and py logic ops?

> unparenthesize py set operations

> extended comparison 0 <= x < 1 (using and)
> ProductSet?

> expr = x**2y**2, f = lambda x, y: expr

> importing modules to allow custom code execution

> better plotting limits specification

> AppliedUndef, in func and in _Mul
> Function ('f') (), Function ('f') (x), Function ('f') (x, y)
> ODEs

> vector calculus
> nabla, laplacian

> random server port selection / fallback
> emptyset Unicode symbol

> var_prime in quick mode

> break out state machine from server

> formatting: no spacing for nums - 3 x -> 3x?
> formatting: quick mode no spacing for vars x y z -> xyz?
> formatting: non-quick mode explicit tex spacing for vars var1 var2 -> var1\ var2?

> floor / ceiling

> display subscripts
> parse subscripts

> SYM.PY REFACTOR!

> plots as objects?
> no-evaluate version of Add and Mul (for tuples, lists and strings)?
> flush sys.stdout to msg before sending exception?
> function names allowed as variables on assignment?
> xlat different types and initializations of matrices?
> long variable name shortcut? $?
> derivative and integral of lambda functions?

> fix unparenthesized tuples in function arguments? Not possible during normal entry but might appear somehow anyway.

> sequence(factorial(k), (k,1,oo))
> ImageSet(Lambda(n, 2 n pi + pi/2), Integers)

> var assumptions
> Proper implementation of vectors with "\vec{x}" and "\hat{i}" variables
> systems of equations
> more graphical plots
> numpy support


Errors:


text: {sqrt{{{{not {1.}}}+{\int_{a'}^{-1.0} {"str"} dx}+{{{-1} \cdot {1e100} \cdot {\infty zoo}}}}}}
ast:  ('sqrt', ('+', (('not', ('#', '1.')), ('intg', ('"', 'str'), ('@', 'dx'), ('@', 'a_prime'), ('#', '-1.0')), ('*', (('#', '-1'), ('#', '1e+100'), ('@', 'oo'), ('@', 'zoo'))))))
tex:  ('sqrt', ('+', (('not', ('#', '1.')), ('intg', ('"', 'str'), ('@', 'dx'), ('@', 'a_prime'), ('#', '-1.0')), ('*', (('-', ('*', (('#', '1'), ('#', '1e+100')))), ('@', 'oo'), ('@', 'zoo'))))))
nat:  ('sqrt', ('+', (('not', ('#', '1.')), ('intg', ('"', 'str'), ('@', 'dx'), ('@', 'a_prime'), ('#', '-1.0')), ('*', (('-', ('*', (('#', '1'), ('#', '1e+100')))), ('@', 'oo'), ('@', 'zoo'))))))


x + {{{-1} \cdot {1e100} \cdot {\infty zoo}}}
x + {{-1 * 1e100}}
x + {-1 * 1e100}
x + {-1 * y}

text: x + {-1 * 2}
ast:  ('+', (('@', 'x'), ('*', (('#', '-1'), ('#', '2')))))
tex:  ('+', (('@', 'x'), ('-', ('*', (('#', '1'), ('#', '2'))))))
nat:  ('+', (('@', 'x'), ('-', ('*', (('#', '1'), ('#', '2'))))))
