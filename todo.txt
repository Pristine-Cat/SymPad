> \[], \[[]], \[[], []], ...

> logic operations fall back to Python logic ops?

> remove \lim, \sum and definite \int vars from free_vars

> lambda parse set and py logic ops?

> unparenthesize py set operations

> extended comparison 0 <= x < 1 (using and)
> ProductSet?

> importing modules to allow custom code execution

> better plotting limits specification

> AppliedUndef, in func and in _Mul
> Function ('f') (), Function ('f') (x), Function ('f') (x, y)
> var_prime in quick mode
> ODEs

> vector calculus
> nabla, laplacian

> random server port selection / fallback
> emptyset Unicode symbol

> break out state machine from server

> formatting: no spacing for nums - 3 x -> 3x?
> formatting: quick mode no spacing for vars x y z -> xyz?
> formatting: non-quick mode explicit tex spacing for vars var1 var2 -> var1\ var2?

> floor / ceiling

> display subscripts
> parse subscripts

> SYM.PY REFACTOR!

> plots as objects?
> no-evaluate version of Add and Mul (for tuples, lists and strings)?
> flush sys.stdout to msg before sending exception?
> function names allowed as variables on assignment?
> xlat different types and initializations of matrices?
> long variable name shortcut? $?
> derivative and integral of lambda functions?

> fix unparenthesized tuples in function arguments? Not possible during normal entry but might appear somehow anyway.

> sequence(factorial(k), (k,1,oo))
> ImageSet(Lambda(n, 2 n pi + pi/2), Integers)

> var assumptions
> Proper implementation of vectors with "\vec{x}" and "\hat{i}" variables
> systems of equations
> more graphical plots
> numpy support


Errors:


text: {-1.0  in  True if {partialx+a+\infty zoo} else [1,\partial ] if \ln\partialx else {-1.0 or \partialx}*\[[],]}
ast:  ('piece', ((('=', 'in', ('#', '-1.0'), ('@', 'True')), ('+', (('@', 'dx'), ('@', 'a'), ('*', (('@', 'oo'), ('@', 'zoo')))))), (('[', (('#', '1'), ('@', 'partial'))), ('log', ('@', 'dx'))), (('*', (('or', (('#', '-1.0'), ('@', 'dx'))), ('mat', ((),)))), True)))
tex:  ('piece', ((('=', 'in', ('#', '-1.0'), ('@', 'True')), ('+', (('@', 'dx'), ('@', 'a'), ('*', (('@', 'oo'), ('@', 'zoo')))))), (('[', (('#', '1'), ('@', 'partial'))), ('log', ('@', 'dx'))), (('*', (('or', (('#', '-1.0'), ('@', 'dx'))), ('mat', ()))), True)))

\[]
\[[]]
\[[], []]