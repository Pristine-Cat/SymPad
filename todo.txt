> 2 + lambda x: x**2 - also *, or, and, ^^, etc...
> \} set closer?

> cleaner \int y dx (y = lambda x: x**2)

> sxlat S(num) -> num

> overhaul differentiation to allow dy/dx and df/dx
> d/dx (y) - problematic due to possible interpretation of dx (y) as undefined function (currenly ignoring implicit function names which are differentials)


> ics sym representations
> ?(x)'(2), spt->?(x)(2) instead of subs of diff

> ?x0(t) -> ?x(t)(0), ?x0(t)' -> ?x(t)'(0) from dsolve

> patch dsolve to do: dsolve (y'' + 11 y' + 24 y, y (0) = 0, y'(0) = -7)


> == -> = general representation when valid (if possible)


> display subscripts
> parse subscripts
> single letter variables can take trailing number


> verify all is_var -> is_var_nonconst where consts not allowed

> N beta (2, 3) -> N (beta (2, 3)) instead of N (beta) (2, 3)
> sin a.b()

> hideable variables tab in client

> overhaul function call keyword arguments: expr -> ('kw', expr)?
> overhaul lambda variables: ('@', 'var') -> 'var'?

> input shortcut non-opened closing curly and/or paren?
> parse from python ln x / ln base -> \log_{base} x? only for number bases?

> change lim, sum, diff and intg not wanting to map var specification to strings (diff dvs, int dv, ...)

> quick mode error: dpartial
> quick mode error: \operatorname{\_}()

> More Examples: Lambdas
> More Examples: Parentheses

> allow leading underscore for vars and funcs and leading \_ for tex
> clean up sparser TOKENS and centralize repeated patterns

> var assumptions (using @ character?)

> server send back AST from validaiton to facilitate evaluation

> evil extra spacing before single-quote strings!
> x'**2, how to do?
> # comment end of line?

> substitute shortcut expr (x = ?), or expr |_{x = ?}?

> importing modules to allow custom code execution

> better plotting limits specification

> test_python module

> lighter font color assumptions and info for math returns

> vector calculus
> nabla, laplacian
> Proper implementation of vectors with "\vec{x}" and "\hat{i}" variables?

> random server port selection / fallback
> emptyset Unicode symbol
> ProductSet?
> ImageSet?

> formatting: no spacing for nums - 3 x -> 3x?
> formatting: quick mode no spacing for vars x y z -> xyz?
> formatting: non-quick mode explicit tex spacing for vars var1 var2 -> var1\ var2?

> SYM.PY REFACTOR!

> make sympad importable?

> Custom Contains and other set operation fallbacks to allow symbols to stand in for sets?
> 1 in x and other sets to accept symbols, how?
> plots as objects?
> flush sys.stdout to msg before sending exception?
> function names allowed as variables on assignment?
> xlat different types and initializations of matrices?
> long variable name shortcut? $?
> rewrite sqrt during autocomplete to show radix?

> floor / ceiling

> break out state machine from server

> fix instances unparenthesized tuples in function arguments? Not possible during normal entry but might appear somehow anyway.

> sequence (factorial (k), (k, 1, oo)) (ellipsis)
> ImageSet (Lambda (n, 2 n pi + pi / 2), Integers)

> more graphical plots
> numpy support


Slow Parse:
-----------

11.234375s:  {{d^{2} / dz^{2} c : {c and 1.0 and None} : \sum_{x = \partialy}^c 2 and \frac{\partialy \cdot False \cdot 1}'str' [dy, xyzd, 1e+100]}+{}**{{not partialx}^^'str' : 2^^{True^^1^^\tilde\infty }}+{{\int xyzd dx or logFalse or {1.||\partial x||1}}}} if {{{\lim_{x \to \partial x} c  1e-100 ['str']  {a or \emptyset or dx}}&&{not -1  in  \infty zoo}} \cdot solveset({{'str' and True} and [\partial ,False] and \[\infty zoo,\partial ,1e-100,]},\coth(\frac\tilde\infty dx),{}) \cdot \sqrt[[]]{[partialx,1e100,None]  dx [xyzd, \partial ]  1e+100**dz}} else -{\tilde\infty +dz+-1.0} / \sum_{x = {dy*-1.0*xyzd}}^\fracpartial\partialx c = \infty zoo if \[[\int 1e-100 dx : \partial !,],[{False+oo+\emptyset} / \partial ^.1,],[{\arcsin()||Sum (oo, (x, \partialy, 1.0))||\frac\tilde\infty dz},],] else \[[{\partial x : partial},-1^partial,{not dz},],] [\{False : "str" : -1,{\emptyset \cdot \infty zoo \cdot -1}}, {d^{6} / dy^{3} dy^{3} a+-1.0 [a]+\{dx,1.,-1.0}}] if [{\[[False,.1,],[1e-100,\partial x,],]  dy**\partialx}] if {} else {{not {c == xyzd \cdot [1,False,.1]}}^^[{1.0^^partial} : \[[0,-1.0,],[dy,a,],[xyzd,1e-100,],] : \left|\partial x\right|,{b&&partialx}**b = a,{(\infty zoo,\partialx)||\emptyset : None||Limit (dz, x, xyzd)}]^^\sum_{x = \{{\tilde\infty &&1.0&&.1}}}^[.1,oo] [\lim_{x \to \partialy} \partial , {True,\emptyset,xyzd}] {\[-1.0,1e+100,\tilde\infty ,]||Limit (xyzd, x, 2)}} if {lambda x, y, z: -1.0,{1 or -1},\int False dx} if {-\tilde\infty } else (Sum (dx, (x, 'str', dz)),True if \partialy else False if True else partialx if 1e100) if log{\partial x||\partial x} else \[partialx,1e+100,] == \infty zoo if dx else \infty zoo if partial if d^{3} / dy^{3} Limit (dz, x, 'str') else {Limit (-1, x, -1)*\[[0,-1.0,-1.0,],[\partial ,dx,0,],]*dz > None} / {lambda x, y: -1.0 : {None+0}+{'str' if 1 else \partialy  d^{3} / dy^{3} -1.0}} else {\frac{Sum (1.0, (x, dy, .1)) or oo**partialx or \frac\partialyNone}\left|"str" [None]\right| or \sum_{x = \{None,1e+100}^sqrt1e+100}^\int_True [partialx]^{2 and True} -1^\partialx dx \left|{dx^^-1}\right|}
8.453125s:   \sum_{x = {\int 1.! dx+\int_{None^^dz}^{a&&1} \{False} dx+1.0 if b else 1e+100 if oo^{partial and xyzd and 1e100}}}^lambda x, y: {} {\left|oo\right| \cdot \sqrt"str"} : {None^0&&\lim_{x \to \infty zoo} \partial &&\sqrt[c]\emptyset} if {[[2,None,dy]] / \left|Sum (\partial x, (x, -1, \partial ))\right|^^{\int \infty zoo dx and {a+b+\partial x}} if d^{1} / dx^{1} c if dx else dz if -1 else \sqrt[oo]1.0! if {oo \cdot oo}! else d^{2} / dx^{1} dz^{1} partialx / a^^\int \int {dz \cdot oo} dx dx} else {[-\{}] or (-1. : 'str',{sqrtpartial^^lambda x: dy^^0 [1.0, xyzd, .1]},{0 : partial : \infty zoo  \left|1\right|}) or \sqrt[{\sum_{x = \infty zoo}^\emptyset None and \[-1,\infty zoo,'str',] and \partial  if b else -1 if b else partial if 2 else 1e-100}]\lim_{x \to dx} b [{dy and -1}, \int dx dx, oo / None]} if {{partial [a, 1.0, \partial ]||\{1.0}}!+{{\partial x**b*False  in  0} or {\partial ||1}^factor_list(a,dx)}} else \log_\sqrt{{b&&True&&1e-100}  {partialx : -1}}lambda x, y, z: {} = {{'str',oo}^^None [\tilde\infty ]^^{1e+100||'str'}} if ({\{}||sqrt.1 if {1e-100||1e+100} else 1 : 1e+100 if {} else oo [1.0] if \tilde\infty ! else Limit (2, x, \tilde\infty )}) else \int {partial \cdot True \cdot partial} dx [{'str'^c^^\fracoo1.0^^d^{7} / dx^{1} dx^{3} dy^{3} b}] : kronecker_product(\left|0 != partial\right|,{not {\infty zoo+xyzd}},{\partialx > \infty zoo and [\partial x,-1.0]})
7.3125s:     lambda x, y: [{{dz  c}&&Limit (1e+100, x, dz)},\lim_{x \to {.1 \cdot c \cdot \partialy}} \infty zoo : \partialx,Limit ({\emptyset and a}, x, {-1 or dx})] if Point2D((xyzd!^dx if "str" else \emptyset if -1 else \tilde\infty  if 'str' else \partialx,\int_\left|c\right|^{False*a*b} {0 \cdot a} dx),log{\sum_{x = \emptyset}^partialx 1e-100^^\left|-1.0\right|}) else {\fracNone"str"*-1 if False else 0 if 1e100 else 1.0 if b else \emptyset} if 1e+100 if 1.0 else a if c [{\infty zoo*.1*1e-100}, {partial*b}] if -\fraca1e+100! else \left|Sum (dx ["str", c], (x, \sum_{x = \partial }^None 1, {}))\right| if {a and 2} == d^{2} / dy^{2} \emptyset [[dy]!, b / .1 / {1e+100&&0&&1}, \sum_{x = d^{9} / dy^{3} dx^{3} dy^{3} \partialx}^{dy+1+xyzd} -\partialy] else {{}  {{-1.0  \partialy}}  (2,\emptyset,1e-100) >= lambda x, y: 1} if \log_{1. : \partial  : 1e+100  Line2D("str",dx,\partialx)  \int_-1.0^b -1 dx}{\partial x!  Limit (dz, x, 1e100)  sqrt'str'} if [{c**dx*2 / -1.0} if \log{\infty zoo,\partialy,"str"},d^{6} / dx^{1} dx^{2} dy^{3} \left|a\right| > {1.0}] else {{\log_\frac\partial xa2  not in  c}+d^{7} / dz^{2} dy^{2} dz^{3} \{}+{field(\[\infty zoo,2,],partial / False,\{}),log{\emptyset  \partial }}} if {{\{a,\partialy}^^{1. or 1.0}}^Limit (\tilde\infty  : 1 : dz, x, b if \partialx else -1 if 2 else \partialx)*{{oo and False} \cdot False [a]} : {{1e100 or partialx}&&\{\partialy,1e-100}}}
6.421875s:   \sum_{x = \lim_{x \to []} {\sqrt[1e+100]{False} + 1e+100 + oo zoo}}^{{not partialx[1., \{}, 'str'] or lambda: partial or 0.1 or dz or (d**2) / dx**1 dz**1 - 1 / \sqrt[oo]{partial}}} ({x/y * zd} / {dz c dz * 1e+100}, -(partialx + dz + 1.0), -2:-{1 * 2 * 1.0}:{partialx, 1.0}) if (\lim_{x \to -1.0} 0**o o and \log_{partial}(ypartialx) a! and \sqrt[xyzd]{oo} zoo && d^3 / dx**1 dz**2 (0.1) && d^9 / dz**3 dy**3 dx**3 (a)) + (\lim_{x \to \[[b, True, 'str'], [dx, 1.0, 0.1]]} -1 != dx, oo zoo and partialx and None if dz! else lambda:partialy, {{dy: partialy}, (False:partialx:\{}), \lim_{x \to partial} partialx}) + \[oo] / \[\{}, partialy] <= ln({None, oo zoo, dy}) else (GeometryError() and ln(x) - 1.00) {dx: 0.1} {1.0: partialx} * \sum_{x = 1e-100}^p artial True * {'str': \[xyzd, dy]} or ({\{},} || True/partialy || {|partialx|}) && (\[True, 'str'] || zoo * 1. True || -partialx) && Sum(lambda: 1e+100, (x, oo zoo[1e-100], c or partialx or None)) or (acot(\{}), \int dx dx)! if [{|(-1)|}, d^4 / dx**2 dz**2 (\log_{\{}}(-1.0))][loglambda x, y, z:oo zoo if 1e-100 else dy if dy, Sum(False, (x, False, 0)) && \sqrt[False]{2} && 1/dx a!, gcd((dy or partialx)**1.0**partialx, Sum(b:None, (x, -1 + 1.0 + 'str', xyzd!)), {|-1|} + 1.0 * 1.0)] else {|(dx[partial, \{}] and (False or partialx)) (not -1**dy) * d^2 / dx**2 (dx) if 1e+100 else dy if 1e-100|}
5.109375s:   d^{2} / dy^{2} \left|\[c,\tilde\infty ,b,]\right| > [\cos(c,\emptyset,\partialx),{.1*1.*dx}]! if \[[{\int \[partial,] dx and \int_{"str" \cdot b}^{c or \partial x} {'str'||a||c} dx},\log_{\int_'str'^c partialx dx&&\frac1e-100b&&{"str" and False and 1}}\sqrt[d^{2} / dx^{1} dx^{1} None]{1.&&1e100},d^{5} / dx^{2} dz^{3} Predicate((2,1e100),(b,.1)),],[{{a and partialx}**\sqrt[partialx]\tilde\infty +{{2 or \partial x} \cdot Sum (None, (x, 0, 1e+100)) \cdot {1e-100&&'str'&&\partialy}}+{False [0, 1e+100, xyzd]}},\sum_{x = \arcsinh({dy+1.},b!,True > 1e-100)}^{not 1e-100 = partial} -mathieusprime(.1,None,dz),\int grlex({1e+100^^1e+100},\sum_{x = \infty zoo}^dy None,\sqrt[0]1e100) dx,],] else \[[{{True : b,.1 : \partialx}&&\logoo&&dz**0},1e+100 > -1 / {.1||a||.1},],[{{partial or \tilde\infty }||.1 if partial else \tilde\infty  if \partialy else \partial  if \tilde\infty ||d^{4} / dy^{3} dx^{1} dz},{\partial  \cdot c \cdot \infty zoo} / {not 1},],]! if {\partialy : {not \sqrt[False != 1e-100]1e100 if \partial x else True if a else b if \partialy},-1 : -{2 : [-1.0,1e100,oo],\emptyset : \[1e-100,partial,.1,]}} else {(lambda x, y, z: {1+1e-100},{() and -1.0^\emptyset and {partialx&&1.0}}) \cdot \[\partial x,\partialx,'str',]! if {{False or \partial  or partial}^^-a} else log{\tilde\infty *2*partialx} if {{oo} and {\partial  and 'str' and "str"} and (xyzd,\emptyset)} \cdot lambda x, y, z: [\[[c,\partialy,-1.0,],[1e+100,.1,-1.0,],[dz,a,2,],],{1e-100 \cdot 'str'}]} if {{\left|1  in  "str"\right|  pdsolve({1.0 and \partialy},1e+100 : False : -1)}*\[[lambda x, y, z: \[0,],],[ln\sum_{x = \tilde\infty }^xyzd \infty zoo,],]} else {\left|{"str" and \partial x and 1.0}\right| [{oo^^\emptyset^^\tilde\infty } : -xyzd : {partial||dz}] and -d^{4} / dy^{3} dz^{1} 1.!}
4.125s:      {{{\int 1 dx and Sum (True, (x, dy, 1e-100)) and -\tilde\infty } and sqrt-1 if \sqrt[dx]1e100 else \infty zoo / \tilde\infty  if {-1.0^^False} else {oo^^"str"^^True} if \infty zoo**\partial x else -1.0^dy}  \sqrt[sqrt"str"^{None&&"str"}]{True [dx]*\lim_{x \to partialx} .1}} if \sqrt[\fracoo1]\left|.1\right|**{\[[True,],["str",],[xyzd,],]+\lim_{x \to 2} dy}  in  \left|\sqrt\partialy^dx\right| else {{\sqrtdy!+{Options()||\sqrt[dy]0||\sinh(.1,'str',1e+100)}+{\tilde\infty ,\partial } if \sqrtdz else \[[dy,],[1e+100,],[dx,],] if dy! else \sqrt[dx]1e-100 if {1.0&&1e100} else {1e+100&&1}} and {\log_b0 and \tilde\infty  if 1e-100 else \partialx if 0 else oo if True else 'str'} [{{dx and b} \cdot dy if 1}] and \[d^{4} / dx^{1} dz^{1} dy^{2} dz!,]} if \[{-1^partialx*\sin("str",1.0)},[{\tilde\infty +c+\partialx},--1,{\partial x or False or \partialy}],Limit (True if b else 1e100 if \partialx else b if dz else 1e+100, x, -\partial x),] [\left|\log_ooa if \log_"str".1\right|, {{xyzd+1e100}^{1&&\partial x} or \int_{1e+100 or 1.}^{0||\partial ||False} \lim_{x \to \partialy} 'str' dx}, \frac{{xyzd&&partialx}^^\int 1e-100 dx}{\int_b^oo 'str' dx+[-1.0,dy]}] else Limit (\[\sum_{x = \frac"str"dy}^{partialx^^dy} \sqrt[partialx]xyzd,1e-100 : dy : -1.0**\[1e100,],{{1^^\partialy} \cdot {None+-1.0+-1}},], x, {{oo or 1. or .1}*\sum_{x = 1.}^dx \tilde\infty }^\[{not \infty zoo},\[1.0,],1e100!,]) if {{Limit (2, x, oo) or \sqrt[\infty zoo]1 or {dz&&1}}^\log_{oo or partial or 1}{dz or "str"}+{\[{dz  -1  -1.0},(-1,False,1e-100),]  \int \cos(0,\partial ,1.0) dx  \deg('str',\partial ,\partial )!}} else {not {Limit ('str' / "str", x, \lnc)||True / \partialx / \lim_{x \to "str"} \partialx||Inverse({1e-100||\partial x||False},{not a})}}
3.5s:        {{\max(xyzd,dy,oo) : -\partial x : \int True dx,{-1 if 'str' else 2 and \left|oo\right|},{not -1 : 1e100 : \infty zoo}}||\log_{}\[{dz||b},]} if 1e-100 / 1e+100 if {1.&&dz} else {dx+c+1} if 1e100 if \partialx else 0 if 1. else c if xyzd else dy else \int_.1^1e100 \partialx dx if \sum_{x = \partialy}^\infty zoo c / d^{3} / dy^{3} b^c if -\fracxyzd\partialx / {1e-100*True*\partialx} else {.1 : d^{6} / dy^{3} dx^{3} \[[\logxyzd,],[{dx*dy*dy},],[-1 == 1,],],\partial  : -lambda x, y: Limit ('str', x, 1e-100),None : {{lambda x: oo or {0||0}}+\{\fracbFalse,\[["str",\partial ,1e+100,],[dz,-1.0,partial,],],Limit (None, x, partialx)}}} if {{'str'^1e100 / partialx / xyzd&&\sqrt[{partialx||partial}]-.1} \cdot () \cdot {not [] [\[1e-100,], {partial,None}, \sqrt[-1.0]\partial ]}} else {\int_sqrt"str" [-1 / dy, a**dx]^{{dz,\infty zoo}*d^{6} / dx^{3} dx^{3} \partialx} \frac\sum_{x = 1}^1e-100 None{False&&.1&&1e-100} dx&&{d^{6} / dx^{3} dx^{3} lambda x: \partial x||{not dy}!}&&\arcsech(lambda x, y: "str" [\lim_{x \to dy} 1.0, a if c else \partial x, {\tilde\infty *dx*.1}],{partial^^2^^1.0} [oo**1.],\[[{-1.0^^a},\int_1e+100^None \emptyset dx,],])}
3.15625s:    \[[\sqrt[{{\sqrt[1e-100]True^^[]^^DiagonalOf(1e100)}*{xyzd : {dz||dz||dz},1e-100 : {'str'&&1e-100&&1e-100},True : {\tilde\infty ,\infty zoo,dz}}}]\log_\sqrt[xyzd!]lambda x, y, z: 1.0{not \partialy [partial]},{\partialx / True  in  \[partialx,\partialx,] if \lim_{x \to d^{4} / dz^{2} dz^{2} False} \[True,a,] else {\lim_{x \to 0} None \cdot \int None dx \cdot \infty zoo!} if {-'str'  hn2(1e-100,1e+100,-1.0)  {True  partialx}} else -oo**dy*{{\sqrt[\emptyset]\partialy \cdot \int dx dx},{\tilde\infty  : dy,1 : partial} / d^{3} / dy^{3} partialx,-\sum_{x = -1}^oo 1.0}*({oo : 1e+100 : .1  \arccsc()  {dy and True and xyzd}},(\[[\partial ,\tilde\infty ,\partialx,],[1.,\emptyset,\infty zoo,],[1e100,'str',"str",],]),{not classify_pde()})},],[ln\sqrt[{oo < \tilde\infty *{b*\infty zoo}}]\sqrt[{1.&&\partial x}]1e+100 : xyzd : dx,-None : True : "str" [{partial and \partial }, lambda: 'str', dz if True else 'str' if \tilde\infty  else \partial ] if {not partial if .1 else 1e-100 if -1.0 else True if True} else \sum_{x = \int dy dx}^{b||False} -1e100 if {\{}^^\sum_{x = 1}^False dx} else {\partial ^xyzd+\csc(-1,\partial x)+1e-100 != partial},],]
3.515625s:   \sum_{x = \lim_{x \to []} {\sqrt[1e100]False+{1e+100+\infty zoo}}}^{{not \partial x [1., \emptyset, "str"]} or lambda: {partial or .1 or dz} or d^{2} / dx^{1} dz^{1} -1 / \sqrt[oo]partial} (\fracxyzd / dz{c  dz  1e100},-{\partialx+dz+1.0},-2 : {-1  2  1.0} : {\partialx,1.0}) if {{\lim_{x \to -1.0} 0^oo and {\log_\partialypartialx \cdot a!} and {\sqrt[xyzd]\infty zoo&&d^{3} / dx^{1} dz^{2} .1&&d^{9} / dz^{3} dy^{3} dx^{3} a}}+(\lim_{x \to \[[b,True,"str",],[dx,1.0,.1,],]} -1 != dx,{\infty zoo and \partial x and None} if dz! else lambda: \partialy,\{{dy : \partialy},False : \partial x : \emptyset,\lim_{x \to \partial } \partial x})+\frac\[oo,]\[\emptyset,\partialy,] <= log{None,\infty zoo,dy}} else {{{GeometryError() and \log_-1.00}  {{dx : .1}  {1.0 : \partialx}  \sum_{x = 1e-100}^partial True}  {"str" : \[xyzd,dy,]}} or {{\{\emptyset}||True / \partialy||\left|partialx\right|}&&{\[True,'str',]||{\tilde\infty *1.*True}||-\partial x}&&Sum (lambda: 1e+100, (x, \infty zoo [1e-100], {c or partialx or None}))} or (\arccot(\emptyset),\int dx dx)!} if [\left|(-1)\right|,d^{4} / dx^{2} dz^{2} \log_\emptyset-1.0] [loglambda x, y, z: \infty zoo if 1e-100 else dy if dy, {{Sum (False, (x, False, 0))&&\sqrt[False]2}&&{1 / dx  a!}}, \gcd({dy or \partial x}**1.0**partialx,Sum (b : None, (x, {-1+1.0+"str"}, xyzd!)),{\left|-1\right|+{1.0*1.0}})] else \left|{{dx [partial, \emptyset] and {False or \partial x}} \cdot {not -1**dy} \cdot d^{2} / dx^{2} dx if 1e100 else dy if 1e-100}\right|
3.65625s:    \[\sqrt[-{partial in 2, \[b, oo zoo], \[1e-100, oo]}]{2}:0:False >= {1.0, 1.0, 1.0}[d^4 / dx**2 dx**2 (1e+100):False[b, dx, partialx], Sum(1e-100, (x, partialx, \{})) ^^ \[dz]], {|\sqrt[xyzd]{partialx}|} ^^ (2 None, zoo * 1e+100 a, -dz) if \sqrt[partialy! / {dx * 1.}]{-(1. or 1e+100 or oo zoo)} else \sqrt['str' || a || 1e+100]{a} != True[a ^^ partial ^^ 0.1:0 && 2, harmonic(sqrt1e + 100, -{1 a True})] if {not \int dx dx: False**o o} else not ln(x) sinh(partialx) * \sum_{x = 1e+100}^{partial} c if \[[not dy None, {a,}**N one!], [Limit(\{} / -1.0, x, \log_{partial}(x) - 1.0), lambda x, y: {|b|}], [Limit(\int_1^F alse dz dx, x, \[True]), \sqrt[\sqrt[partialy]{oo}]{()}]], {\int x - {1**partial x partial} dx} * partialx! {} Limit({|c|}, x, partialx!) * \lim_{x \to \[sinh(1.)]} sqrt(b**{partialx \{}}) * Sum(not 1e+100, (x, \[[dy, dx, \{}]], None partialx partialx))**{{partial: dy, True: 'str'} && \sum_{x = a}^d z dy}]
3.015625s:   {dx or "str" or a} if \int 1 dx else (-1.0,-1,1e+100) if \sqrtoo / {partialx if a else .1 if 1e-100 else \partial x^^\{1e+100,1e-100}} if Limit ({{'str'||-1}  {False \cdot dy}}, x, False if 2 else \partial  if 'str' else -1.0 if \infty zoo else 0 if (2,1e+100) else {-1.0||1.} if Limit (dx, x, c) else \partialy [-1, dy] if \int \tilde\infty  dx else \lim_{x \to -1.0} \infty zoo) else d^{3} / dx^{3} {[1e+100]&&{False : 1e-100,partialx : xyzd}&&{}} if 1.^1.0 if d^{3} / dx^{3} \infty zoo else {not 2} if d^{4} / dy^{1} dx^{2} dy^{1} -1 else {True and False and 1e-100} if \partialy [dy, c, dz]^{not \sqrt[dz]dx} else \[\lim_{x \to {-1 and 1e100}} 1 / \tilde\infty ,] if {dy!,{}} if {Curve(-1.0) and 1. : \infty zoo} else \tilde\infty  / \infty zoo == a [1e100] if (\int c dx,{1.0 \cdot \tilde\infty  \cdot 2}) else {\[dy,'str',] and \[[False,-1,],]} if lambda x, y, z: \[[{True : \partialy**'str'},{None||\tilde\infty ||-1} [\{c,1e100,0}],d^{4} / dy^{2} dx^{2} d^{2} / dz^{2} \emptyset,],]
3.0625s:     \[[not Sum(partialx, (x, 'str', b)) && \[dz, dx, 2] && {-1.0: xyzd}:(None and dx) + 0**True:sqrt(oo) zoo oo zoo not in None, {not {\int () dx} / lambda x, (y:0.1 * 1. oo zoo)}, d^7 / dz**3 dy**3 dx**1 ({\sum_{x = \lim_{x \to 1e+100} 1e+100}^v ariations(a, partialx, 1.) \log_{partial}(1.0), partialy and atanh() and \int 1e+100 dx, [1e-100 and partialx and a, cot(1., b, -1)]})], [(d**4) / dy**1 dx**(3[True, partial, oo])**Sum(-1, (x, 'str', 1.0)) * (not \sqrt[1e-100]{'str'!}) {-{|not 1e-100|}}, \lim_{x \to {2: {|\{} oo zoo xyzd|}, 1: [] + (\{})!, 1e+100: (sqrt(oo) zoo or 1.0:2 or oo zoo:'str')}} logcombine(\lim_{x \to -1.0} zoo, 2 or zoo, \sum_{x = 1.}^p artialx partial)**{b: Sum(1., (x, 1, 1.0)), 1e+100: -1 != c}, csc(\int_{\[[2, 1e-100, 1e+100]]}^{0 dz} 0.1/oo dx, 'str' / \{} or d^6 / dx**1 dx**2 dz**3 (dx), (1e-100/1e+100))**{|{|'str'[None]|}|}], [d^3 / dx**1 dy**2 (partialx) not in 1e+100 / None[\lim_{x \to None} -1 >= (2 or 1e+100 or partialx), -1.0 ^^ dy if d^5 / dx**1 dy**1 dy**3 (partialx) else c**dx if cot(0.1) else coth(1) if c**partial, {1.0, partialy, 1e+100} {-'str'} (dx ^^ dy ^^ 1.)] && \[[(partial) / x - 1.0, sqrt(partialx)], [-1.0**-1, [oo zoo, 0.1, -1.0]]] <= None * 1. && partialx[oo zoo] && ('str' and True) && d^5 / dy**2 dx**1 dz**2 (Li(partial)**{|not \{}|}), [(dz partialx partialx)[(oo zoo, 0.1, \{})], {1. != partial, partial and 1e-100, \[[1e-100, a, 0.1], [1.0, 'str', partialx], [None, 0, dy]]}] / {[oo zoo in dz] || (not c and partial and False + xyzd + 'str') || {partial * 1e+100 True, oo > zoo}}, {-lambda: \int partial dx and {False or 1. or oo/z * oo oo zoo or \{}, l/a * mbda x, (y:dy \[partialx, partial, 0.1])}}]]
3.671875s:   \[[\[\{},],pollard_pm1({{not lambda x, y, z: \partialx} and {}},\int_{-1.0 and dy}**{\partialx&&dz&&.1}^Limit (\infty zoo != "str", x, \sum_{x = partial}^b \partialx) \int_{1e-100||a}^{\partial +.1+1} {partial and -1} dx dx,\[-1,] if d^{6} / dx^{1} dz^{2} dy^{3} partialx else {a&&\infty zoo&&\partial } if 1. if -1 else \partialx if \partialy else 1e+100 if 'str' else xyzd else \lim_{x \to oo} .1 if {1.0  partialx}^lambda x, y: {-1*True*False}),log{{not .1} and \sum_{x = dx}^1 dy and \partial  : -1.0} : d^{2} / dy^{2} \left|{None : .1,\partialy : 1e100}\right| : \{{partial / c  1e-100 if -1 else -1 if 1e100  "str" < dx},{0^partialx+[1e100,\partialy,a]+(xyzd)},1e+100! / {dz+a}},],[\left|[] [{} = True [oo], [{True+.1},\sum_{x = \partialy}^partialx \partial x,1.0 if False else xyzd if 1e100 else \partial x if xyzd else partialx]]\right|,log{{\partial *partial*'str'}^^"str" if -1 else 'str' if False^^\[[b,],]}^Limit (partialx [1.], x, -1.0),\sqrt[\left|{\partialy and dy and 1.}\right|]{a+partial} if dx! else None if -1 else \partialx if dy else None if {dy*\partialx} else {\emptyset||1e100||partialx} if 0 = c^c**dy ["str"**-1]^\{{2,partialx}},],[\sqrt\arccot()^[\left|\tilde\infty \right|**xyzd**\partialx,\fracxyzd^partial\int oo dx,\{{1.0^^2^^1},\arcsinh(-1,1e+100,"str"),{a  dz}}],{not sqrt\log_{False  a}ComputationFailed('str',1e100,a)},{'str' : d^{4} / dx^{3} dy^{1} -1,\partialx : {not 1e-100},1e100 : \tan(None)} : \log_.1\partial x / lambda x: True : {c&&1.&&.1}**\[[c,],] [{\partial x / b [{}],\frac[]\arccot(xyzd,False)}, d^{2} / dz^{2} {1e+100} [{\partialx}!, {-\tilde\infty +\int 1e-100 dx}]],],]
3.578125s:   \left(\sum_{x = \begin{cases} {\int 1.! \ dx} + {\int_{None \ominus dz}^{a \cap 1} \left\{False \right\} \ dx} + 1.0 & \text{for}\: b \\ 1{e}{+100} & \text{for}\: \infty^{\partial \wedge xyzd \wedge 1{e}{+100}} \end{cases}}^l ambda\ x, y{:}\left\{ \right\} \left|\infty \right| \sqrt{\text{'str'}}{:}\begin{cases} None^0 \cap \lim_{x \to \infty \widetilde\infty} \partial \cap \sqrt[c]{\emptyset} & \text{for}\: \begin{cases} \frac{\left[\left[2, None, dy \right] \right]}{\left|\operatorname{Sum}\left(\partial x, \left(x, -1, \partial \right) \right) \right|} \ominus \left(\int \infty \widetilde\infty \ dx \wedge a + b + \partial x \right) & \text{for}\: \begin{cases} \frac{d}{dx^1}\left(c \right) & \text{for}\: dx \\ dz & \text{for}\: -1 \\ \sqrt[\infty]{1.0!} & \text{for}\: \left(\infty \infty \right)! \\ \frac{\frac{\left(d^2 \right)}{dx^1 dz^1\ \partial x}}{a} \ominus \int \int dz\ \infty \ dx \ dx & \text{otherwise} \end{cases} \end{cases} \\ \left[-\emptyset \right] \vee \left({-1.}{:}\text{'str'}, \left\{sqrtpartial \ominus \lambda x{:} dy \ominus 0\left[1.0, xyzd, 0.1 \right] \right\}, 0{:}\partial{:}\infty \widetilde\infty \left|1 \right| \right) \vee \sqrt{\left[\begin{cases} \sum_{x = \infty \widetilde\infty}^{\emptyset} None \wedge \begin{bmatrix} -1 \\ \infty \widetilde\infty \\ \text{'str'} \end{bmatrix} \wedge \partial & \text{for}\: b \\ -1 & \text{for}\: b \\ \partial & \text{for}\: 2 \\ 1{e}{-100} & \text{otherwise} \end{cases} \right]}\ \lim_{x \to dx} b\left[dy \wedge -1, \int dx \ dx, \frac{\infty}{None} \right] & \text{for}\: \left(\partial\left[a, 1.0, \partial \right] \cup \left\{1.0 \right\} \right)! + \left(\partial x^b\ False \in 0 \vee \left(\partial \cup 1 \right)^f \operatorname{actor\_list}\left(a, dx \right) \right) \\ \ln\left(x \right) \sqrt{\left(b \cap True \cap 1{e}{-100} \right) \left\{\partial x{:} -1 \right\}}\ \lambda x & \text{otherwise} \end{cases}, y, z{:}\left(\left\{ \right\} = \begin{cases} \left\{\text{'str'}, \infty \right\} \ominus None\left[\widetilde\infty \right] \ominus \left(1{e}{+100} \cup \text{'str'} \right) & \text{for}\: \left(\left\{\begin{cases} \emptyset \cup \sqrt{0.1} & \text{for}\: 1{e}{-100} \cup 1{e}{+100} \\ 1 & \text{otherwise} \end{cases}{:} \begin{cases} 1{e}{+100} & \text{for}\: \left\{ \right\} \\ \infty\left[1.0 \right] & \text{for}\: \widetilde\infty! \\ \operatorname{Limit}\left(2, x, \widetilde\infty \right) & \text{otherwise} \end{cases} \right\} \right) \\ \left(\int \partial\ True\ \partial \ dx \right)\left[\text{'str'}^c \ominus \frac{o}{o} \cdot 1.0 \ominus \frac{\partial^7}{\partial x^1\partial x^3\partial y^3}\left(b \right) \right] & \text{otherwise} \end{cases} \right){:}\operatorname{kronecker\_product}\left(\left|0 \ne \partial \right|, \neg\ \infty \widetilde\infty + xyzd, \partial x > \infty \widetilde\infty \wedge \left[\partial x, -1.0 \right] \right) \right)
3.46875s:    (\sum_{x = {{\int 1.! dx} + {\int_{None ^^ dz}^{a && 1} {False,} dx} + 1.0 if b else 1e+100 if oo**{partial and xyzd and 1e+100}}}^l ambda x, y:{} {|oo|} sqrt('str'):None**0 && \lim_{x \to oo zoo} partial && \sqrt[c]{\{}} if {[[2, None, dy]] / {|Sum(partialx, (x, -1, partial))|} ^^ (\int oo zoo dx and a + b + partialx) if {d / dx**1 (c) if dx else dz if -1 else \sqrt[oo]{1.0!} if (oo oo)! else {(d**2) / dx**1 dz**1 partialx} / a ^^ \int \int dz oo dx dx}} else [-\{}] or (-1.:'str', {sqrtpartial ^^ lambda x: dy ^^ 0[1.0, xyzd, 0.1]}, 0:partial:oo zoo {|1|}) or sqrt([\sum_{x = oo zoo}^{\{}} None and \[-1, oo zoo, 'str'] and partial if b else -1 if b else partial if 2 else 1e-100]) * \lim_{x \to dx} b[dy and -1, \int dx dx, oo/None] if (partial[a, 1.0, partial] || {1.0,})! + (partialx**b False in 0 or (partial || 1)**f actor_list(a, dx)) else ln(x) sqrt((b && True && 1e-100) {partialx: -1}) lambda x, y, z:({} = {'str', oo} ^^ None[zoo] ^^ (1e+100 || 'str') if ({\{} || sqrt(0.1) if 1e-100 || 1e+100 else 1: 1e+100 if {} else oo[1.0] if zoo! else Limit(2, x, zoo)}) else (\int partial True partial dx)['str'**c ^^ o/o * 1.0 ^^ d^7 / dx**1 dx**3 dy**3 (b)]):kronecker_product({|0 != partial|}, not oo zoo + xyzd, partialx > oo zoo and [partialx, -1.0]))
3.859375s:   \[[\int \log_\[[{-1.0+b+2},],]\{{not "str"}} dx,sqrt{\sum_{x = 'str'}^.1 \infty zoo and 1.0^\tilde\infty } / {\partial x*2*a}**{None  \infty zoo}**(hessian(\tilde\infty ,-1),{partialx : 1.0},\sqrt[oo]\partialy),({\arctan()^^[]}),],[[()]^\[{\partialx : False,b : 'str',partial : 1.0},-xyzd,\partial **dy,] == \[[\partialx!,{True and 2 and 'str'},],],\int_{not \[[\lim_{x \to partialx} dy,["str"],{0&&\partialy},],[{\partialy  0},{not "str"},None!,],['str' / 1.0,{1e100 \cdot False},{dx||.1||2},],]}^{\sum_{x = []}^Limit (0, x, 1e100) [-1.0,a]+d^{6} / dz^{2} dz^{2} dx^{2} {}} {(\left|c\right|,{False and xyzd},1 [dz])+{\sum_{x = 1e100}^partialx -1.0 or \{1,\partial x}}} dx,\frac{\{b} \cdot {True and \emptyset}} [{{-1.0 and dx and None}+{a  \partial x  a}+lambda x: 2}, {c^^\emptyset} [1.!, {b||b||\partialx}, [\infty zoo]]]lambda: \{{\partial *partial*.1},\[[True,1e100,\partialx,],[\tilde\infty ,1e-100,True,],],True if partial},],[\sqrt[{\[Limit (\infty zoo, x, \partialx),{not \partial x},] and {\infty zoo**\partialx||{}||{not -1.0}} and {{False and \emptyset} and \sqrt['str']b}}]{(\tilde\infty )**lambda x, y, z: 1.^^lambda x, y, z: \lim_{x \to "str"} partialx},{\{{0&&1e+100&&b} [lambda x: \partialy, \frac\infty zoopartial, {1.+1.0+partial}],\lim_{x \to dy} \partial x**\left|dz\right|,{a : \partialx||{b*\emptyset*-1.0}}} \cdot \frac12^2 / 1. / [{.1 \cdot \partial  \cdot dx},\log_a1e100,lambda: \partialy] \cdot {{{oo+1.+c}^^[dy,partial]^^-1e-100}  {oo <= a+\partialy^-1}}},\{lambda x, y: dx if {partial||\partialy||dx} else {\infty zoo or \partialy} if \partialy^None else {\tilde\infty &&a},{'str'**"str" or 1e+100 / True}}^{\{}  {"str" \cdot \partialx}  a!}^{\frac"str""str"&&{"str" \cdot False \cdot .1}},],]
2.109375s:   expand_log((\int_{-1 : -1.0,1 : 2}^\[dy,] {\infty zoo \cdot 1.0} dx)) if {{1.0  1  2} / {1e100||dz}+\{-1.0,'str',-1} if \sum_{x = None}^0 \partialx else Limit (None, x, a)+\sqrt[\partial ].1**'str' if \partial  else 1. if \partialy else 'str' if \partialx} [\sum_{x = \tan()}^{dy : b \cdot \int \partialy dx \cdot ()} \left|1\right| if {'str'*\emptyset} else \[c,2,] if {\emptyset or 1} else Triangle(-1.0) if \{False}, \[{\int_'str'^oo -1.0 dx \cdot {-1.0 \cdot 1e-100} \cdot dz == \infty zoo},d^{2} / dy^{2} 2 : \infty zoo : dy,]] else \deg({Sum (dz  in  \partial x, (x, \left|-1.0\right|, {not 1}))  False^1e-100 : \log\partial x : {False+\partial }  \[\partialy**b,(xyzd,True),]},\[[\{'str',oo,\emptyset},{xyzd&&"str"&&2},],[{},-'str',],[{partialx^^\partialy},\partial x / partialx,],] / [\[[1.,c,dx,],[\emptyset,\partial ,0,],]]) if {({{not \partialx}^^{not c}^^\frac1e100\partialx})*{\left|-1\right|  \frac1.0\tilde\infty } > {False : dx : -1.0 or c if 1e-100 else partialx if xyzd else 0 if False}*{[True]+0 [dz, \emptyset]} if \left|\partialy = \tilde\infty \right| else \sum_{x = a}^False 1e+100 : {\tilde\infty  and xyzd} if -\[[-1,c,\partialx,],]} else {1.0 : {},'str' : \arg(\left|Line3D()\right|,\sum_{x = 1.  in  oo}^Limit (1e+100, x, \partial x) \{None,dz,-1},{{\partialy^^2} and "str" > \emptyset and {\partial x*None}}),"str" : \[{"str" or 1e-100} / {0,partial,-1},\[["str",c,.1,],[1.0,None,1e+100,],[c,dx,-1,],] / \partial x [\partial x],{\partialx! and Limit (1e+100, x, "str") and \emptyset!},]} if {[]**\sqrt{'str'*\tilde\infty *False}  {\int \[[oo,],] dx*{\{}&&None == 0&&{}}*(-1e+100,-1 != 1.,True if 1. else None)}  -{b or \partial x or partialx} / {not {xyzd^^1e100}}} else \left|{not \logNone}\right| = {\tilde\infty  : {\lim_{x \to \emptyset} 0  \partial x  in  "str"  {1.0  1e+100  \infty zoo}},1e-100 : 0 [-1] >= -1!,1e100 : {{1 or xyzd or oo},{.1&&False&&a},\partial x / \partialy}}
2.859375s:   {{{\int \[\tilde\infty ,1,] dx or {} or \int_{2*\emptyset}^{"str",dx,\partialx} \[-1.0,1e-100,oo,] dx} and {\[\partial x,-1.0,]^lambda x, y: \partial x} and {\int dy dx if \emptyset / dx else \left|\partial x\right| if dz if 1.0 else a if 1e+100 else dz if -1 else \int_"str"^'str' dz dx if {b^^dx} else {\infty zoo*1.0},Sum (1., (x, dy, 1)) : {True+False}}}&&{0 : d^{1} / dx^{1} \log_lambda: \partial xWildFunction(1e-100,\tilde\infty ,oo),1 : {\log_\frac\partial xyzd[2,2,b],\sqrt[-1 [\partial x]]{None or False or dz}}}&&CRootOf(\left|\{lambda x, y: -1.0}\right|,\[[\[[{1e-100||dy||a},-dx,],],d^{3} / dx^{2} dx^{1} \sqrta,{-1 if \partialx else 1e100 if -1.0 and {0,-1} and {True and \partialx and 'str'}},],[{d^{1} / dy^{1} a+(oo)+{xyzd : \partial x,dy : \partialy}},\int_\[[a,.1,],]^\left|\partialx\right| \fracpartialxTrue dx,d^{4} / dx^{1} dz^{2} dy^{1} d^{7} / dy^{3} dx^{2} dz^{2} 1e-100,],],\{\[1e100,False,-1,]**\log_-11e-100,{{}^^\[1.0,]^^{1||oo}}})}
2.15625s:    \begin{cases} \sum_{x = \lim_{x \to \left[ \right]} \left(\sqrt[1{e}{+100}]{False} + 1{e}{+100} + \infty \widetilde\infty \right)}^{\left\{\neg\ \partial x\left[1., \emptyset, \text{'str'} \right] \vee \lambda{:} \partial \vee 0.1 \vee dz \vee \frac{\left(d^2 \right)}{dx^1 dz^1} - \frac{1}{\sqrt[\infty]{\partial}} \right\}} \left(\frac{\frac{x}{y}\ zd}{dz\ c\ dz \cdot 1{e}{+100}}, -\left(\partial x + dz + 1.0 \right), {-2}{:}{-{1 \cdot 2 \cdot 1.0}}{:}\left\{\partial x, 1.0 \right\} \right) & \text{for}\: \left(\lim_{x \to -1.0} 0^o o \wedge \log_\partial\left(ypartialx \right) a! \wedge \sqrt[xyzd]{\infty}\ \widetilde\infty \cap \frac{\partial^3}{\partial x^1\partial z^2}\left(0.1 \right) \cap \frac{\partial^9}{\partial z^3\partial y^3\partial x^3}\left(a \right) \right) + \left(\lim_{x \to \begin{bmatrix} b & True & \text{'str'} \\ dx & 1.0 & 0.1 \end{bmatrix}} -1 \ne dx, \begin{cases} \infty \widetilde\infty \wedge \partial x \wedge None & \text{for}\: dz! \\ \lambda & \text{otherwise} \end{cases}{:}\partial y, \left\{\left\{dy{:} \partial y \right\}, \left(False{:}\partial x{:}\emptyset \right), \lim_{x \to \partial} \partial x \right\} \right) + \frac{\begin{bmatrix} \infty \end{bmatrix}}{\begin{bmatrix} \emptyset \\ \partial y \end{bmatrix}} \le \ln\left(\left\{None, \infty \widetilde\infty, dy \right\} \right) \\ \left(\operatorname{GeometryError}\left( \right) \wedge \ln\left(x \right) - 1.00 \right) \left\{dx{:} 0.1 \right\} \left\{1.0{:} \partial x \right\} \sum_{x = 1{e}{-100}}^p artial\ True \cdot \left\{\text{'str'}{:} \begin{bmatrix} xyzd \\ dy \end{bmatrix} \right\} \vee \left(\left\{\emptyset \right\} \cup \frac{True}{\partial y} \cup \left|\partial x \right| \right) \cap \left(\begin{bmatrix} True \\ \text{'str'} \end{bmatrix} \cup \widetilde\infty \cdot 1.\ True \cup -\partial x \right) \cap \operatorname{Sum}\left(\left(\left( \right) \mapsto 1{e}{+100} \right), \left(x, \infty \widetilde\infty\left[1{e}{-100} \right], c \vee \partial x \vee None \right) \right) \vee \left(\cot^{-1}\left(\emptyset \right), \int dx \ dx \right)! & \text{for}\: \left[\left|\left(-1 \right) \right|, \frac{\partial^4}{\partial x^2\partial z^2}\left(\log_{\emptyset}\left(-1.0 \right) \right) \right]\left[loglambda\ x, y, z{:}\begin{cases} \infty \widetilde\infty & \text{for}\: 1{e}{-100} \\ dy & \text{for}\: dy \end{cases}, \operatorname{Sum}\left(False, \left(x, False, 0 \right) \right) \cap \sqrt[False]{2} \cap \frac{1}{dx\ a!}, \gcd\left(\left(dy \vee \partial x \right)^{1.0^{\partial x}}, \operatorname{Sum}\left(b{:}None, \left(x, -1 + 1.0 + \text{'str'}, xyzd! \right) \right), \left|-1 \right| + 1.0 \cdot 1.0 \right) \right] \\ \left|\begin{cases} \left(dx\left[\partial, \emptyset \right] \wedge \left(False \vee \partial x \right) \right) \left(\neg\ -1^{dy} \right) \frac{d^2}{dx^2}\left(dx \right) & \text{for}\: 1{e}{+100} \\ dy & \text{for}\: 1{e}{-100} \end{cases} \right| & \text{otherwise} \end{cases}
2.453125s:   (sqrt(partial!) if {1e+100 if \{} else b if 1 else dy} else {|0|} if lambda x, y, z:b if partial oo zoo True partialy else ln(arg(1e+100, 1, partialx)) if {1.0**-1.0, \[['str', dz, 0.1], [oo zoo, 'str', -1.0], [-1, partialx, partial]], d^2 / dy**2 (partialx)} else ['str']**{1/e} + 100 \{} if partialx * 1e+100 * 0.1 or None/partialy else 'str' * 1. in (1e-100 && 0.1)[-{|partialx 'str' * {-1}|}[ln(0):\sqrt[dy]{\{}}], \int x * \sum_{x = d^5 / dy**3 dz**2 (partial)}^{{partialx: 1e+100, partialx: oo}} {\int 1e-100 dx} / ((dx + xyzd) (False + zoo + c) * \int 'str' dx)**{{\[0, b, 0], None and 1.0 and b} or \[zoo!, \sqrt['str']{True}, -'str']} ([oo, partialx] (xyzd ^^ 1) + \sum_{x = 'str'}^{0.1} 1e-100**1.0 / False) dx, \[['str' > 1.0, 2 or dy]] if d / dx**1 (\log_{oo}(zoo) oo zoo) else {} if \[[a, 1e+100, False]]**1 e100! else \sqrt[{}]{b && 0.1} if {-1, True, 0} && sqrt(\{}) else \sqrt[zoo if 2 else 'str']{Limit(1e-100, x, 0)} || ({\sqrt[b]{dz} / d**5} / dz**1 dz**1 dz**3 - 1.0) || (d^6 / dx**3 dy**1 dy**2 (atanh()))])
2.140625s:   {\sum_{x = {\sqrt[{0 or b}]()  \log_\sqrt[\partialy]a\arcsech()}}^{{{partial \cdot dz \cdot \tilde\infty } and {-1||xyzd} and lambda x: \partial x} or ()} d^{1} / dz^{1} nfloat({\emptyset  -1  b})&&{not {{oo,\emptyset,1.} if a if -1 else b if \emptyset else True if partialx else {.1 and True} if \sqrt[\partial ].1 else \frac1.0dy and ln{"str"+\partial x}}}&&\log_\left|\left|d^{3} / dy^{3} 2\right|\right|'str'**1.**{\infty zoo : dy,dz : 'str',c : xyzd} [{\left|dy\right|&&dy [1.0, 1e-100]&&\int \infty zoo dx}, {\int_\emptyset^partial \partial x dx+lambda x, y: a}, {"str" if \emptyset else b if \partialy else False if "str" else partial&&{1.0+dy}}]}
2.59375s:    {Limit (\left|xyzd\right|, x, {"str" or 2 or \partial x}) [\int_{1e-100||partial}^{\partialx or dy} \{} dx, {\infty zoo^b*1e+100 <= 1.*-1 = \emptyset}, \sqrt[-1].1**{partial or None}]^^{sqrt\partial x [\infty zoo]+\sqrt[-1.0]1e100!}} if \[[{d^{6} / dx^{1} dz^{2} dz^{3} {\infty zoo*"str"}+d^{4} / dz^{1} dy^{3} \[-1.0,]},],[\int \[{"str"  'str'  dy},] dx,],] else \left|{\lim_{x \to "str"} \tilde\infty   \left|partial\right|  d^{6} / dy^{2} dy^{3} dy^{1} \partial } [(True,\tilde\infty ,True)**{\infty zoo*None}]\right| if \[[{partial [1.] \cdot {0 : \partial x,partialx : dx,"str" : b} \cdot {-1.0  .1}} if (False : dx,{1e100 \cdot 1e100 \cdot b}) else \left|True**\partial x\right|,{\[0,]*\[\partialy,]} / Limit (\emptyset, x, 2)  not in  {a^^\tilde\infty ^^1e-100},],[Sum (\frac{}{}, (x, lambda x: {False^^\partialx^^.1}, Sum (dx, (x, b, "str")) [{-1*'str'*False}, {\partialx&&'str'&&a}, oo : dy])),\log_\sqrt[\frac'str'0]d^{3} / dx^{3} Truelambda x, y, z: a if a else b if \partialy,],[lambda: \{1e-100,\infty zoo,1e-100} / \[{b||.1||None},\{},\[[dy,c,],],],{},],] else lambda x: \log{} if {\int_b^partial 1e+100 dx or \[['str',],] or 2 if partialx else 1e+100} else [] if {\left|\{dz} / [partial]\right| and \fracBasePolynomialError({True \cdot -1},d^{4} / dy^{2} dz^{2} partialx,{1e-100&&1.})Sum (\[1,1e100,], (x, \{"str",1.}, \sqrt[1]\partial )) and \{d^{5} / dz^{2} dy^{1} dx^{2} {\infty zoo&&xyzd},{{dz  'str'  1.}&&lambda x, y, z: \tilde\infty &&lambda x, y: 0}}} else {}
2.46875s:    Limit({|xyzd|}, x, 'str' or 2 or partialx)[\int_{1e-100 || partial}^{partialx or dy} \{} dx, oo zoo**b * 1e+100 <= 1. * {-1} = \{}, \sqrt[-1]{0.1**{partial or None}}] ^^ sqrt(partialx)[oo zoo] + \sqrt[-1.0]{1e+100!} if \[d^6 / dx**1 dz**2 dz**3 (oo zoo 'str') + d^4 / dz**1 dy**3 (\[-1.0]), \int \['str' 'str' dy] dx] else {|(\lim_{x \to 'str'} zoo {|partial|}d**6/dy**2 dy**3 dy**1 partial)[(True, zoo, True)**{oo zoo None}]|} if \[[[partial[1.] {0: partialx, partialx: dx, 'str': b} {-{1.0 * 0.1}} if (False:dx, 1e+100 * 1e+100 b) else {|True**partialx|}, \[0] \[partialy] / Limit(\{}, x, 2) not in a ^^ zoo ^^ 1e-100]], [[Sum({} / {}, (x, lambda x: False ^^ partialx ^^ 0.1, Sum(dx, (x, b, 'str'))[-{1 'str' False}, partialx && 'str' && a, oo:dy])), ln(x) \sqrt['str' / 0]{d**3}/dx**3 Truelambda x, y, z:a if a else b if partialy]], [[lambda: {1e-100, oo zoo, 1e-100} / \[b || 0.1 || None, \{}, \[[dy, c]]], {}]]] else lambda x:ln({}) if {\int_b^p artial * 1e+100 dx or \['str'] or 2 if partialx else 1e+100} else [] if {|{dz,} / [partial]|} and B/a * sePolynomialError(True * {-1}, d^4 / dy**2 dz**2 (partialx), 1e-100 && 1.) Sum(\[1, 1e+100], (x, {'str', 1.}, \sqrt[1]{partial})) and {d^5 / dz**2 dy**1 dx**2 (oo zoo && xyzd), {dz 'str' * 1. && lambda x, y, (z:zoo && lambda x), (y:0)}} else {}

224.015625s: Limit (\[[-{\tilde\infty ^^True^^partialx}^\['str',xyzd,]!,],[Sum ({?g(x, y, z, reals = False)}, (x, dz <= 2, {-1 \cdot -1.0})) / \left|\tilde\infty '\right|,],[sqrt1.0^d^{7} / dy^{3} dz^{1} dz^{3} 0 [\lim_{x \to {dz and dz and 1.}} \fracpartialx2, \int_c^1e+100 \partialy dx**{\emptyset \cdot \partialy \cdot \tilde\infty }],],], x, {log\int_\partialy^.1 \partial  dx : partial == 1e+100 : {\emptyset^^\partialx}*\log_{log"str" \cdot \[[-1,oo,],] \cdot \[\tilde\infty ,\partial ,-1.0,]}{False and oo}^c : 1e+100 : partial})
116.109375s: {\{\[[d^{5} / dz^{2} dy^{2} dx^{1} -1.,lambda x: xyzd^{-1.0 : \emptyset,\tilde\infty  : False},d^{5} / dz^{3} dz^{2} {\partial x+xyzd},],]}*{{{False''||{partialx and 1e+100}||(0,\infty zoo)},\{1.0,False}'} \cdot \frac\sum_{x = \lim_{x \to xyzd} True}^{None \cdot 1. \cdot True} d^{1} / dy^{1} \partialx\left|"str"'\right| \cdot \frac\logTrue [partialx]{\left|xyzd\right|&&\emptyset**-1&&\[[1.,0,\partialy,],]}}*\log_lambda x, y, z: {{a : -1,1e+100 : False} or ln\partialy}{[0 [\partial , 1, partial],{\partial x and \partial x and a},srepr(b)]*Sum (\log_\partial x1e+100, (x, {2  b  oo}, 1.0 if dy else b))*\[[{\partialx^^1e-100^^1e-100},dy**c,1. if 1e+100 else 1e100 if 1e100 else xyzd if oo,],[\lim_{x \to \partialy} partial,\left|dz\right|,\[[1.0,],[.1,],[\partialy,],],],]}}
114.71875s:  {{\partial '*{dy^^\infty zoo}*{.1&&dz}}} if {\sum_{x = 0**1e-100}^{not \tilde\infty } [dx,\partialy,1e100]  {{\partial *b}+{dx^^1.}+{b+-1}}} : -\sum_{x = {1e+100 : 1e100 : a and 1.0**\tilde\infty  and \sqrt[2]\partialx}}^\{\[[dx,b,],]} {elliptic_k()+xyzd : \infty zoo+[\infty zoo,0,dx]} : Limit ([[1. if -1],\left|\infty zoo\right| : {.1 \cdot "str" \cdot 0},\sqrt-1 / bspline_basis_set(1,c,False)], x, reduced_totient([\left|dx\right|,\sum_{x = \partial x}^2 a]))
35.984375s:  ({\left|{\[-1,partial,.1,] \cdot \lim_{x \to c} dy}\right|^^-{\[['str',\tilde\infty ,],[partial,\partial ,],[None,2,],] \cdot \tilde\infty ' \cdot \partialx^\partialx}^^{1e+100 : {not \tilde\infty  [\partialy]},\emptyset : \frac[\emptyset,xyzd,True]{False^^\partialy^^\partialy}}},\sum_{x = {{"str"+dz+True}&&\partialx**.1} : \log_1.0dy! : {-1  c} : {.1+\partialy+a} : \sqrtFalse}^{{{\partialy \cdot c \cdot c}+{partial^^1}}^^\left|xyzd**1.0\right|^^\[{?(x, reals = False, commutative = False)},]} {?g()},\{})
27.46875s:   -\sqrt[{1.||b||\partialx} : {None and False}]lambda x: {xyzd*-1.0*\partial } if \frac{?f(x, y)}!\sqrt[\partial '!]acsc(True < .1) else {\[\left|\partial x\right|,] : \left|lambda x: -1.0\right|  []  \lim_{x \to lambda x, y, z: a if 1. else partialx if \partial x else c} {not d^{4} / dx^{2} dx^{2} a}} if \sqrt\sqrt{{dx,1e100} or log1e+100 or d^{4} / dx^{1} dx^{3} \partialy} else \left|{not \partialy if False else 0 if 1e-100 else b if {.1 or 1 or dz} else {?g(reals = False, commutative = False)} if {not dz} else -1.0 if 1e100 else "str" if dy else b}\right| if {ln\[[{2  2},\fracb2,],] and [\left|1.0 / \tilde\infty \right|,{\infty zoo**0||\[[2,],[None,],]}]}


Errors:
-------

-qint
text:   \[Sum ({-{2&&'str'&&1e+100} \cdot -[\infty zoo,None,oo]}, (x, {{\fracdz\emptyset  {partialx||xyzd}}&&{{\partialx*xyzd*-1.0}^^{1e+100||c||\tilde\infty }}&&{{\infty zoo*\partialx*2}+[]}}, {'str' [True, 1e100] if Sum (\tilde\infty , (x, \partialy, 1)) else {?h(x)} if \lim_{x \to \partial } 0 else \lim_{x \to 1.} False if {1e100 or dx or 0} else \infty zoo**\partial ,{\emptyset  2}  not in  {xyzd||1e100},\sum_{x = {a&&partial}}^{c+\emptyset+2} b'''})),\left|{?(x)}^{not \fracxyzd\partial }\right|,{{\[\sum_{x = 1e100}^\partial  'str',{\partial },partial!,]||{{1e+100 \cdot 1.0}*{\partialx and dx}}||{{.1 \cdot xyzd}+{dx  0  \emptyset}+{\partial x : -1,dz : \tilde\infty ,dz : dy}}} and sqrt{?f(x, y)}},]
ast:    ('mat', ((('func', 'Sum', (('*', (('-', ('&&', (('#', '2'), ('"', 'str'), ('#', '1e+100')))), ('-', ('[', (('*', (('@', 'oo'), ('@', 'zoo'))), ('@', 'None'), ('@', 'oo')))))), (',', (('@', 'x'), ('&&', (('*', (('/', ('@', 'd'), ('@', 'z')), ('set', ()), ('||', (('@', 'dx'), ('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))))))), ('^^', (('*', (('@', 'dx'), ('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'), ('#', '-1.0'))), ('||', (('#', '1e+100'), ('@', 'c'), ('@', 'zoo'))))), ('+', (('*', (('@', 'oo'), ('@', 'zoo'), ('@', 'dx'), ('#', '2'))), ('[', ()))))), ('set', (('piece', ((('idx', ('"', 'str'), (('@', 'True'), ('#', '1e+100'))), ('func', 'Sum', (('@', 'zoo'), (',', (('@', 'x'), ('@', 'dy'), ('#', '1')))))), (('ufunc', 'h', ('x',), ()), ('lim', ('#', '0'), ('@', 'x'), ('@', 'partial'))), (('lim', ('@', 'False'), ('@', 'x'), ('#', '1.')), ('or', (('#', '1e+100'), ('@', 'dx'), ('#', '0')))), (('*', (('@', 'oo'), ('^', ('@', 'zoo'), ('@', 'partial')))), True))), ('<>', ('*', (('set', ()), ('#', '2'))), (('notin', ('||', (('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))), ('#', '1e+100')))),)), ('sum', ('diffp', ('@', 'b'), 3), ('@', 'x'), ('&&', (('@', 'a'), ('@', 'partial'))), ('+', (('@', 'c'), ('set', ()), ('#', '2')))))))))),), (('|', ('^', ('ufunc', '', ('x',), ()), ('not', ('*', (('/', ('@', 'x'), ('@', 'y')), ('@', 'z'), ('@', 'dpartial')))))),), (('and', (('||', (('mat', ((('sum', ('"', 'str'), ('@', 'x'), ('#', '1e+100'), ('@', 'partial')),), (('@', 'partial'),), (('!', ('@', 'partial')),))), ('*', (('#', '1e+100'), ('#', '1.0'), ('and', (('@', 'dx'), ('@', 'dx'))))), ('+', (('*', (('#', '0.1'), ('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))), ('*', (('@', 'dx'), ('#', '0'), ('set', ()))), ('dict', ((('@', 'dx'), ('#', '-1')), (('@', 'dz'), ('@', 'zoo')), (('@', 'dz'), ('@', 'dy')))))))), ('sqrt', ('ufunc', 'f', ('x', 'y'), ())))),)))
tex:    ('mat', ((('func', 'Sum', (('*', (('-', ('&&', (('#', '2'), ('"', 'str'), ('#', '1e+100')))), ('-', ('[', (('*', (('@', 'oo'), ('@', 'zoo'))), ('@', 'None'), ('@', 'oo')))))), (',', (('@', 'x'), ('&&', (('*', (('/', ('@', 'd'), ('@', 'z')), ('set', ()), ('||', (('@', 'dx'), ('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))))))), ('^^', (('*', (('@', 'dx'), ('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'), ('#', '-1.0'))), ('||', (('#', '1e+100'), ('@', 'c'), ('@', 'zoo'))))), ('+', (('*', (('@', 'oo'), ('@', 'zoo'), ('@', 'dx'), ('#', '2'))), ('[', ()))))), ('set', (('piece', ((('idx', ('"', 'str'), (('@', 'True'), ('#', '1e+100'))), ('func', 'Sum', (('@', 'zoo'), (',', (('@', 'x'), ('@', 'dy'), ('#', '1')))))), (('ufunc', 'h', ('x',), ()), ('lim', ('#', '0'), ('@', 'x'), ('@', 'partial'))), (('lim', ('@', 'False'), ('@', 'x'), ('#', '1.')), ('or', (('#', '1e+100'), ('@', 'dx'), ('#', '0')))), (('*', (('@', 'oo'), ('^', ('@', 'zoo'), ('@', 'partial')))), True))), ('<>', ('*', (('set', ()), ('#', '2'))), (('notin', ('||', (('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))), ('#', '1e+100')))),)), ('sum', ('diffp', ('@', 'b'), 3), ('@', 'x'), ('&&', (('@', 'a'), ('@', 'partial'))), ('+', (('@', 'c'), ('set', ()), ('#', '2')))))))))),), (('|', ('^', ('ufunc', '', ('x',), ()), ('not', ('*', (('/', ('@', 'x'), ('@', 'y')), ('@', 'z'), ('@', 'dp'), ('@', 'a'), ('@', 'r'), ('@', 't'), ('@', 'i'), ('@', 'a'), ('@', 'l')))))),), (('and', (('||', (('mat', ((('sum', ('"', 'str'), ('@', 'x'), ('#', '1e+100'), ('@', 'partial')),), (('@', 'partial'),), (('!', ('@', 'partial')),))), ('*', (('#', '1e+100'), ('#', '1.0'), ('and', (('@', 'dx'), ('@', 'dx'))))), ('+', (('*', (('#', '0.1'), ('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))), ('*', (('@', 'dx'), ('#', '0'), ('set', ()))), ('dict', ((('@', 'dx'), ('#', '-1')), (('@', 'dz'), ('@', 'zoo')), (('@', 'dz'), ('@', 'dy')))))))), ('sqrt', ('ufunc', 'f', ('x', 'y'), ())))),)))
nat:    ('mat', ((('func', 'Sum', (('*', (('-', ('&&', (('#', '2'), ('"', 'str'), ('#', '1e+100')))), ('-', ('[', (('*', (('@', 'oo'), ('@', 'zoo'))), ('@', 'None'), ('@', 'oo')))))), (',', (('@', 'x'), ('&&', (('*', (('/', ('@', 'd'), ('@', 'z')), ('set', ()), ('||', (('@', 'dx'), ('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))))))), ('^^', (('*', (('@', 'dx'), ('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'), ('#', '-1.0'))), ('||', (('#', '1e+100'), ('@', 'c'), ('@', 'zoo'))))), ('+', (('*', (('@', 'oo'), ('@', 'zoo'), ('@', 'dx'), ('#', '2'))), ('[', ()))))), ('set', (('piece', ((('idx', ('"', 'str'), (('@', 'True'), ('#', '1e+100'))), ('func', 'Sum', (('@', 'zoo'), (',', (('@', 'x'), ('@', 'dy'), ('#', '1')))))), (('ufunc', 'h', ('x',), ()), ('lim', ('#', '0'), ('@', 'x'), ('@', 'partial'))), (('lim', ('@', 'False'), ('@', 'x'), ('#', '1.')), ('or', (('#', '1e+100'), ('@', 'dx'), ('#', '0')))), (('*', (('@', 'oo'), ('^', ('@', 'zoo'), ('@', 'partial')))), True))), ('<>', ('*', (('set', ()), ('#', '2'))), (('notin', ('||', (('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))), ('#', '1e+100')))),)), ('sum', ('diffp', ('@', 'b'), 3), ('@', 'x'), ('&&', (('@', 'a'), ('@', 'partial'))), ('+', (('@', 'c'), ('set', ()), ('#', '2')))))))))),), (('|', ('^', ('ufunc', '', ('x',), ()), ('not', ('*', (('/', ('@', 'x'), ('@', 'y')), ('@', 'z'), ('@', 'dp'), ('@', 'a'), ('@', 'r'), ('@', 't'), ('@', 'i'), ('@', 'a'), ('@', 'l')))))),), (('and', (('||', (('mat', ((('sum', ('"', 'str'), ('@', 'x'), ('#', '1e+100'), ('@', 'partial')),), (('@', 'partial'),), (('!', ('@', 'partial')),))), ('*', (('#', '1e+100'), ('#', '1.0'), ('and', (('@', 'dx'), ('@', 'dx'))))), ('+', (('*', (('#', '0.1'), ('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))), ('*', (('@', 'dx'), ('#', '0'), ('set', ()))), ('dict', ((('@', 'dx'), ('#', '-1')), (('@', 'dz'), ('@', 'zoo')), (('@', 'dz'), ('@', 'dy')))))))), ('sqrt', ('ufunc', 'f', ('x', 'y'), ())))),)))
dpartial


-qint
text:   \int \int_(1e100 if True else c if xyzd else partial if 1.,\{-1,\partial ,.1})^{{1e+100 : 1e-100} and \arccsch(True)} (\int oo dx) dx dx : {\left|-1.0 if "str" else 2 if 1.0 else \emptyset**{\partial  and c}\right|*{[\[[.1,1e+100,],[xyzd,True,],]],{lambda x, y: 0*{True&&partialx}*b**b},\fracdz : \partial x{partialx*1.}}*\frac{dy : 1e-100 : dx \cdot partialx^b \cdot {xyzd and -1.0}}\[1.0,dy,oo,] if {.1&&.1&&True} else oo**dx if -1. else {-1 \cdot \partialx \cdot \partial x} if dx!}
ast:    ('slice', ('intg', ('intg', ('*', (('^', ('func', '_', (('piece', ((('#', '1e+100'), ('@', 'True')), (('@', 'c'), ('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd')))), (('@', 'partial'), ('#', '1.')))), ('set', (('#', '-1'), ('@', 'partial'), ('#', '0.1'))))), ('and', (('dict', ((('#', '1e+100'), ('#', '1e-100')),)), ('func', 'acsch', (('@', 'True'),))))), ('intg', ('@', 'oo'), ('@', 'dx')))), ('@', 'dx')), ('@', 'dx')), ('piece', ((('*', (('|', ('piece', ((('#', '-1.0'), ('"', 'str')), (('#', '2'), ('#', '1.0')), (('^', ('set', ()), ('and', (('@', 'partial'), ('@', 'c')))), True)))), ('set', (('[', (('mat', ((('#', '0.1'), ('#', '1e+100')), (('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))), ('@', 'True')))),)), ('lamb', ('*', (('#', '0'), ('&&', (('@', 'True'), ('@', 'dx'))), ('^', ('@', 'b'), ('@', 'b')))), ('x', 'y')), ('slice', ('/', ('@', 'd'), ('@', 'z')), ('*', (('@', 'dx'), ('@', 'dx'), ('#', '1.'))), None))), ('/', ('slice', ('@', 'dy'), ('#', '1e-100'), ('*', (('@', 'dx'), ('^', ('@', 'dx'), ('@', 'b')), ('and', (('*', (('@', 'x'), ('@', 'y'), ('@', 'z'), ('@', 'd'))), ('#', '-1.0')))))), ('mat', ((('#', '1.0'),), (('@', 'dy'),), (('@', 'oo'),)))))), ('&&', (('#', '0.1'), ('#', '0.1'), ('@', 'True')))), (('^', ('@', 'oo'), ('@', 'dx')), ('#', '-1.')), (('*', (('#', '-1'), ('@', 'dx'), ('@', 'dx'))), ('!', ('@', 'dx'))))), None)
tex:    None
\operatorname{\_}()


text:   {gegenbauer(partial if partial else 1. if dz) / \fracxyzd\infty zoo!**-1.0 : 1 if \frac11e100 else -a if -1**\infty zoo else {c : 1e-100} : {\int None dx&&c > "str"}^^lambda x, y: {\int \left|\partialx\right| dx&&\sqrt[{"str"&&True}]{None or \partial }&&{}}}
ast:    ('set', (('slice', ('/', ('func', 'gegenbauer', (('piece', ((('@', 'partial'), ('@', 'partial')), (('#', '1.'), ('@', 'dz')))),)), ('*', (('/', ('@', 'x'), ('@', 'y')), ('@', 'z'), ('@', 'doo'), ('^', ('!', ('@', 'zoo')), ('#', '-1.0'))))), ('piece', ((('#', '1'), ('*', (('/', ('#', '1'), ('#', '1')), ('@', 'e'), ('#', '100')))), (('-', ('@', 'a')), ('*', (('-', ('^', ('#', '1'), ('@', 'oo'))), ('@', 'zoo')))), (('dict', ((('@', 'c'), ('#', '1e-100')),)), True))), ('^^', (('<>', ('&&', (('intg', ('@', 'None'), ('@', 'dx')), ('@', 'c'))), (('>', ('"', 'str')),)), ('*', (('@', 'lambda'), ('@', 'x')))))), ('slice', ('@', 'y'), ('&&', (('intg', ('|', ('@', 'dx')), ('@', 'dx')), ('sqrt', ('or', (('@', 'None'), ('@', 'partial'))), ('&&', (('"', 'str'), ('@', 'True')))), ('dict', ()))), None)))
nat:    ('set', (('slice', ('/', ('func', 'gegenbauer', (('piece', ((('@', 'partial'), ('@', 'partial')), (('#', '1.'), ('@', 'dz')))),)), ('*', (('/', ('@', 'x'), ('@', 'y')), ('@', 'z'), ('@', 'do'), ('@', 'o'), ('^', ('!', ('@', 'zoo')), ('#', '-1.0'))))), ('piece', ((('#', '1'), ('*', (('/', ('#', '1'), ('#', '1')), ('@', 'e'), ('#', '100')))), (('-', ('@', 'a')), ('*', (('-', ('^', ('#', '1'), ('@', 'oo'))), ('@', 'zoo')))), (('dict', ((('@', 'c'), ('#', '1e-100')),)), True))), ('^^', (('<>', ('&&', (('intg', ('@', 'None'), ('@', 'dx')), ('@', 'c'))), (('>', ('"', 'str')),)), ('*', (('@', 'lambda'), ('@', 'x')))))), ('slice', ('@', 'y'), ('&&', (('intg', ('|', ('@', 'dx')), ('@', 'dx')), ('sqrt', ('or', (('@', 'None'), ('@', 'partial'))), ('&&', (('"', 'str'), ('@', 'True')))), ('dict', ()))), None)))
doo


text:   {{{partialx+1e100+\partial }! == {None : {},\tilde\infty  : 2''}||{d^{2} / dz^{2} {.1*1e100*dz},\int_\lim_{x \to "str"} \tilde\infty ^{partialx : partial,0 : \partialx} {} dx}}&&\int {\{\frac\partialy1}+\tanh({c&&1e-100},{-1  True},\sqrt[oo]oo)+--1.0 / -\emptyset} dx}
ast:    ('&&', (('<>', ('!', ('+', (('@', 'dx'), ('#', '1e+100'), ('@', 'partial')))), (('==', ('||', (('-dict', ((('@', 'None'), ('-dict', ())), (('@', 'zoo'), ('-diffp', ('#', '2'), 2)))), ('-set', (('-diff', ('*', (('#', '0.1'), ('#', '1e+100'), ('@', 'dz'))), (('^', ('@', 'dz'), ('#', '2')),)), ('-intg', ('*', (('@', 'x'), ('-lim', ('*', (('^', ('@', 'zoo'), ('-dict', ((('@', 'dx'), ('@', 'partial')), (('#', '0'), ('@', 'dx'))))), ('-dict', ()))), ('@', 'x'), ('"', 'str')))), ('@', 'dx'))))))),)), ('-intg', ('+', (('-set', (('*', (('/', ('@', 'partial'), ('@', 'y')), ('#', '1'))),)), ('-func', 'tanh', (('&&', (('@', 'c'), ('#', '1e-100'))), ('*', (('#', '-1'), ('@', 'True'))), ('-sqrt', ('@', 'oo'), ('@', 'oo')))), ('-', ('-', ('/', ('#', '1.0'), ('-', ('-set', ()))))))), ('@', 'dx'))))
nat:    ('&&', (('<>', ('!', ('+', (('@', 'dx'), ('#', '1e+100'), ('@', 'partial')))), (('==', ('||', (('-dict', ((('@', 'None'), ('-dict', ())), (('@', 'zoo'), ('-diffp', ('#', '2'), 2)))), ('-set', (('-diff', ('*', (('#', '0.1'), ('#', '1e+100'), ('@', 'dz'))), (('^', ('@', 'dz'), ('#', '2')),)), ('-intg', ('*', (('@', 'x'), ('-lim', ('*', (('^', ('@', 'zoo'), ('-dict', ((('@', 'dx'), ('@', 'partial')), (('#', '0'), ('@', 'dx'))))), ('-dict', ()))), ('@', 'x'), ('"', 'str')))), ('@', 'dx'))))))),)), ('-intg', ('+', (('-set', (('*', (('/', ('@', 'partial'), ('@', 'y')), ('#', '1'))),)), ('-func', 'tanh', (('&&', (('@', 'c'), ('#', '1e-100'))), ('*', (('#', '-1'), ('@', 'True'))), ('-sqrt', ('@', 'oo'), ('@', 'oo')))), ('-', ('/', ('#', '1.0'), ('-', ('-set', ())))))), ('@', 'dx'))))


text:   {{1e100 \cdot \emptyset \cdot dx} if {c&&\tilde\infty } else False [1e-100] if 1 ["str", dx] else Sum (False, (x, 1e-100, 1.0)) / d^{2} / dx^{2} b if c else 1 if 0 \cdot 1. [c, 1e+100, a]^{\partial ||c} if d^{8} / dz^{3} dx^{3} dx^{2} \log_partial\partialx else {\int \partial x dx or \int_a^partialx xyzd dx} if {d^{3} / dy^{2} dy^{1} \infty zoo} else \fraca"str" / partial! if \left|\left|oo\right|\right| \cdot {\log_.12+d^{4} / dz^{3} dy^{1} partial} : \sum_{x = -\partialy}^lambda: \partialy \[[True,\tilde\infty ,a,],]}
ast:    ('-slice', ('-piece', ((('*', (('#', '1e+100'), ('-set', ()), ('@', 'dx'))), ('&&', (('@', 'c'), ('@', 'zoo')))), (('-idx', ('@', 'False'), (('#', '1e-100'),)), ('-idx', ('#', '1'), (('"', 'str'), ('@', 'dx')))), (('/', ('/', ('-func', 'Sum', (('@', 'False'), (',', (('@', 'x'), ('#', '1e-100'), ('#', '1.0'))))), ('^', ('@', 'd'), ('#', '2'))), ('*', (('^', ('@', 'dx'), ('#', '2')), ('@', 'b')))), ('@', 'c')), (('#', '1'), ('-piece', ((('*', (('#', '0'), ('^', ('-idx', ('#', '1.'), (('@', 'c'), ('#', '1e+100'), ('@', 'a'))), ('||', (('@', 'partial'), ('@', 'c')))))), ('-diff', ('*', (('-log', ('@', 'artial'), ('@', 'p')), ('@', 'dx'))), (('^', ('@', 'dz'), ('#', '3')), ('^', ('@', 'dx'), ('#', '3')), ('^', ('@', 'dx'), ('#', '2'))))), (('-or', (('-intg', ('@', 'dx'), ('@', 'dx')), ('-intg', ('*', (('@', 'artialx'), ('@', 'xyzd'))), ('@', 'dx'), ('@', 'a'), ('@', 'p')))), ('-diff', ('*', (('@', 'oo'), ('@', 'zoo'))), (('^', ('@', 'dy'), ('#', '2')), ('^', ('@', 'dy'), ('#', '1'))))), (('/', ('/', ('@', 'a'), ('"', 'str')), ('!', ('@', 'partial'))), ('*', (('|', ('|', ('@', 'oo'))), ('+', (('*', (('-log', ('@', 'x')), ('#', '0.12'))), ('-diff', ('@', 'partial'), (('^', ('@', 'dz'), ('#', '3')), ('^', ('@', 'dy'), ('#', '1')))))))))))))), ('-sum', ('@', 'ambda'), ('@', 'x'), ('-', ('@', 'dy')), ('@', 'l')), ('*', (('@', 'dy'), ('-mat', ((('@', 'True'), ('@', 'zoo'), ('@', 'a')),)))))
nat:    ('-slice', ('-piece', ((('*', (('#', '1e+100'), ('-set', ()), ('@', 'dx'))), ('&&', (('@', 'c'), ('@', 'zoo')))), (('-idx', ('@', 'False'), (('#', '1e-100'),)), ('-idx', ('#', '1'), (('"', 'str'), ('@', 'dx')))), (('/', ('/', ('-func', 'Sum', (('@', 'False'), (',', (('@', 'x'), ('#', '1e-100'), ('#', '1.0'))))), ('^', ('@', 'd'), ('#', '2'))), ('*', (('^', ('@', 'dx'), ('#', '2')), ('@', 'b')))), ('@', 'c')), (('#', '1'), ('-piece', ((('^', ('-idx', ('#', '01.'), (('@', 'c'), ('#', '1e+100'), ('@', 'a'))), ('||', (('@', 'partial'), ('@', 'c')))), ('-diff', ('*', (('-log', ('@', 'artial'), ('@', 'p')), ('@', 'dx'))), (('^', ('@', 'dz'), ('#', '3')), ('^', ('@', 'dx'), ('#', '3')), ('^', ('@', 'dx'), ('#', '2'))))), (('-or', (('-intg', ('@', 'dx'), ('@', 'dx')), ('-intg', ('*', (('@', 'artialx'), ('@', 'xyzd'))), ('@', 'dx'), ('@', 'a'), ('@', 'p')))), ('-diff', ('*', (('@', 'oo'), ('@', 'zoo'))), (('^', ('@', 'dy'), ('#', '2')), ('^', ('@', 'dy'), ('#', '1'))))), (('/', ('/', ('@', 'a'), ('"', 'str')), ('!', ('@', 'partial'))), ('*', (('|', ('|', ('@', 'oo'))), ('+', (('*', (('-log', ('@', 'x')), ('#', '0.12'))), ('-diff', ('@', 'partial'), (('^', ('@', 'dz'), ('#', '3')), ('^', ('@', 'dy'), ('#', '1')))))))))))))), ('-sum', ('@', 'ambda'), ('@', 'x'), ('-', ('@', 'dy')), ('@', 'l')), ('*', (('@', 'dy'), ('-mat', ((('@', 'True'), ('@', 'zoo'), ('@', 'a')),)))))
